service: products-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        Fn::GetAtt:
          - CreateProductTopic
          - TopicArn

  # you can overwrite defaults here
  stage: dev
  region: eu-north-1

functions:
  hello:
    handler: handler.getProductsList
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - httpApi:
          path: /products
          method: get
    environment:
      PRODUCTS_TABLE: Products
      STOCKS_TABLE: Stocks

  getProductsById:
    handler: handler.getProductById
    events:
      - httpApi:
          path: /products/{productId}
          method: get
    environment:
      PRODUCTS_TABLE: Products
      STOCKS_TABLE: Stocks

  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: /products
          method: POST
    environment:
      PRODUCTS_TABLE: Products
      STOCKS_TABLE: Stocks

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn
      - sns:
          topicName: CreateProductTopic
    environment:
      PRODUCTS_TABLE: Products

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    CreateProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Create Product Topic
    CreateProductSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn:
          Ref: CreateProductTopic
        Endpoint: fahadashraf9612@gmail.com
    CatalogItemsQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Id: QueuePolicy
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action:
                - sqs:SendMessage
                - sqs:GetQueueAttributes
                - sqs:GetQueueUrl
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
              Resource:
                - Fn::GetAtt:
                    - CatalogItemsQueue
                    - Arn
        Queues:
          - Ref: CatalogItemsQueue

outputs:
  CreateProductTopicArn:
    Description: ARN of the Create Product Topic
    Value:
      Fn::GetAtt:
        - CreateProductTopic
        - Arn
